version: '3.7'
services:

  eureka-serviceregistry:
    container_name: eureka
    build: ./eureka
    networks:
      - demo
    ports:
      - "8761:8761"
    tty: true

  zuul:
    container_name: zuul
    build: ./zuul
    ports:
      - "8083:8083"
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-serviceregistry:8761/eureka/
    networks:
      - demo
    tty: true
    depends_on:
      - eureka-serviceregistry
      - axon-server
      - advertisement
      - rent

  authentication:
    container_name: authentication
    build: ./authentication
    ports:
      - "8085:8085"
    networks:
      - demo
    restart: on-failure
    environment:
        DATABASE_USERNAME: pera
        DATABASE_PASSWORD: pera
        DATABASE_DOMAIN: mysql
        DATABASE_SCHEMA: auth
        EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-serviceregistry:8761/eureka/
        AXON_HOST: axon-server
    tty: true
    depends_on:
      - mysql
      - eureka-serviceregistry

  advertisement:
    container_name: advertisement
    build: ./advertisement
    restart: on-failure
    ports:
      - "8084:8084"
    networks:
      - demo
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-serviceregistry:8761/eureka/
      AXON_HOST : axon-server
    tty: true
    volumes:
      - type: bind
        source: ./advertisement/images
        target: /images
    depends_on:
      - eureka-serviceregistry
      - axon-server

#  location:
#    container_name: location
#    build: ./location
#    restart: on-failure
#    ports:
#      - "8086:8086"
#    networks:
#      - demo
#    environment:
#      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-serviceregistry:8761/eureka/
#      #- REGISTRY_HOST=eureka-serviceregistry
#      AXON_HOST : axon-server
#    tty: true
#    depends_on:
#      - eureka-serviceregistry
#      - axon-server

  axon-server:
    image: axoniq/axonserver:4.3.2
    ports:
      - 8024:8024
      - 8124:8124
    networks:
      - demo

  rent:
    container_name: rent
    build: ./rent
    restart: on-failure
    ports:
      - "8095:8095"
    networks:
      - demo
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-serviceregistry:8761/eureka/
      AXON_HOST : axon-server
    tty: true
    depends_on:
      - eureka-serviceregistry
      - axon-server


  messages:
    container_name: messages
    build: ./messages
    restart: on-failure
    ports:
      - "8087:8087"
    networks:
      - demo
    environment:
      DATABASE_USERNAME: pera
      DATABASE_PASSWORD: pera
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: messages
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-serviceregistry:8761/eureka/
    tty: true
    depends_on:
      - mysql
      - eureka-serviceregistry
#
#
#  search:
#    container_name: search
#    build: ./search
#    restart: on-failure
#    ports:
#      - "8089:8089"
#    networks:
#      - demo
#    environment:
#      DATABASE_USERNAME: pera
#      DATABASE_PASSWORD: pera
#      DATABASE_DOMAIN: mysql
#      DATABASE_SCHEMA: search
#      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-serviceregistry:8761/eureka/
#    tty: true
#    depends_on:
#      - mysql
#      - eureka-serviceregistry
#
  statistics:
    container_name: statistics
    build: ./statistics
    restart: on-failure
    ports:
      - "8090:8090"
    networks:
      - demo
    environment:
      DATABASE_USERNAME: pera
      DATABASE_PASSWORD: pera
      DATABASE_DOMAIN: mysql
      DATABASE_SCHEMA: statistics
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-serviceregistry:8761/eureka/
    tty: true
    depends_on:
      - mysql
      - eureka-serviceregistry


  mysql:
    image: mysql:8.0.19
    container_name: mysql
    restart: always
    networks:
      - demo
    volumes:
      - ./mysql:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: password


networks:
  demo:
    name: demo
    driver: bridge
